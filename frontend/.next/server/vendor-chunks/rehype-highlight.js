"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/rehype-highlight";
exports.ids = ["vendor-chunks/rehype-highlight"];
exports.modules = {

/***/ "(ssr)/./node_modules/rehype-highlight/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/rehype-highlight/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rehypeHighlight)\n/* harmony export */ });\n/* harmony import */ var hast_util_to_text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hast-util-to-text */ \"(ssr)/./node_modules/hast-util-to-text/lib/index.js\");\n/* harmony import */ var lowlight__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lowlight */ \"(ssr)/./node_modules/lowlight/lib/common.js\");\n/* harmony import */ var lowlight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lowlight */ \"(ssr)/./node_modules/lowlight/lib/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit */ \"(ssr)/./node_modules/unist-util-visit/lib/index.js\");\n/**\n * @import {ElementContent, Element, Root} from 'hast'\n * @import {LanguageFn} from 'lowlight'\n * @import {VFile} from 'vfile'\n */ /**\n * @typedef Options\n *   Configuration (optional).\n * @property {Readonly<Record<string, ReadonlyArray<string> | string>> | null | undefined} [aliases={}]\n *   Register more aliases (optional);\n *   passed to `lowlight.registerAlias`.\n * @property {boolean | null | undefined} [detect=false]\n *   Highlight code without language classes by guessing its programming\n *   language (default: `false`).\n * @property {Readonly<Record<string, LanguageFn>> | null | undefined} [languages]\n *   Register languages (default: `common`);\n *   passed to `lowlight.register`.\n * @property {ReadonlyArray<string> | null | undefined} [plainText=[]]\n *   List of language names to not highlight (optional);\n *   note you can also add `no-highlight` classes.\n * @property {string | null | undefined} [prefix='hljs-']\n *   Class prefix (default: `'hljs-'`).\n * @property {ReadonlyArray<string> | null | undefined} [subset]\n *   Names of languages to check when detecting (default: all registered\n *   languages).\n */ \n\n\n/** @type {Options} */ const emptyOptions = {};\n/**\n * Apply syntax highlighting.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */ function rehypeHighlight(options) {\n    const settings = options || emptyOptions;\n    const aliases = settings.aliases;\n    const detect = settings.detect || false;\n    const languages = settings.languages || lowlight__WEBPACK_IMPORTED_MODULE_0__.grammars;\n    const plainText = settings.plainText;\n    const prefix = settings.prefix;\n    const subset = settings.subset;\n    let name = \"hljs\";\n    const lowlight = (0,lowlight__WEBPACK_IMPORTED_MODULE_1__.createLowlight)(languages);\n    if (aliases) {\n        lowlight.registerAlias(aliases);\n    }\n    if (prefix) {\n        const pos = prefix.indexOf(\"-\");\n        name = pos === -1 ? prefix : prefix.slice(0, pos);\n    }\n    /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {undefined}\n   *   Nothing.\n   */ return function(tree, file) {\n        (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_2__.visit)(tree, \"element\", function(node, _, parent) {\n            if (node.tagName !== \"code\" || !parent || parent.type !== \"element\" || parent.tagName !== \"pre\") {\n                return;\n            }\n            const lang = language(node);\n            if (lang === false || !lang && !detect || lang && plainText && plainText.includes(lang)) {\n                return;\n            }\n            if (!Array.isArray(node.properties.className)) {\n                node.properties.className = [];\n            }\n            if (!node.properties.className.includes(name)) {\n                node.properties.className.unshift(name);\n            }\n            const text = (0,hast_util_to_text__WEBPACK_IMPORTED_MODULE_3__.toText)(node, {\n                whitespace: \"pre\"\n            });\n            /** @type {Root} */ let result;\n            try {\n                result = lang ? lowlight.highlight(lang, text, {\n                    prefix\n                }) : lowlight.highlightAuto(text, {\n                    prefix,\n                    subset\n                });\n            } catch (error) {\n                const cause = /** @type {Error} */ error;\n                if (lang && /Unknown language/.test(cause.message)) {\n                    file.message(\"Cannot highlight as `\" + lang + \"`, itâ€™s not registered\", {\n                        ancestors: [\n                            parent,\n                            node\n                        ],\n                        cause,\n                        place: node.position,\n                        ruleId: \"missing-language\",\n                        source: \"rehype-highlight\"\n                    });\n                    /* c8 ignore next 5 -- throw arbitrary hljs errors */ return;\n                }\n                throw cause;\n            }\n            if (!lang && result.data && result.data.language) {\n                node.properties.className.push(\"language-\" + result.data.language);\n            }\n            if (result.children.length > 0) {\n                node.children = /** @type {Array<ElementContent>} */ result.children;\n            }\n        });\n    };\n}\n/**\n * Get the programming language of `node`.\n *\n * @param {Element} node\n *   Node.\n * @returns {false | string | undefined}\n *   Language or `undefined`, or `false` when an explikcit `no-highlight` class\n *   is used.\n */ function language(node) {\n    const list = node.properties.className;\n    let index = -1;\n    if (!Array.isArray(list)) {\n        return;\n    }\n    /** @type {string | undefined} */ let name;\n    while(++index < list.length){\n        const value = String(list[index]);\n        if (value === \"no-highlight\" || value === \"nohighlight\") {\n            return false;\n        }\n        if (!name && value.slice(0, 5) === \"lang-\") {\n            name = value.slice(5);\n        }\n        if (!name && value.slice(0, 9) === \"language-\") {\n            name = value.slice(9);\n        }\n    }\n    return name;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rehype-highlight/lib/index.js\n");

/***/ })

};
;